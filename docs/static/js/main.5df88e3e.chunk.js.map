{"version":3,"sources":["assets/img_login_candidate.png","hooks/useForm.js","helpers/fetch.js","types/types.js","actions/auth.js","components/auth/LoginScreen.js","components/home/Navbar.js","components/home/AboutUs.js","components/home/HomeScreen.js","routers/PrivateScreen.js","routers/PublicScreen.js","components/auth/RegisterScreen.js","routers/AppRouter.js","reducers/authReducer.js","reducers/rootReducer.js","store/store.js","components/ChallengeApp.js","index.js"],"names":["useForm","initialState","useState","values","setValues","reset","handleInputChange","target","name","value","test","fetchQuery","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchQueryWithToken","token","localStorage","getItem","types","authLogin","user","type","payload","checkingFinish","logout","LoginScreen","props","dispatch","useDispatch","button","useSelector","state","auth","stateButton","setStateButton","lEmail","lPassword","formLoginValues","handleLoginInputChange","useEffect","style","marginTop","Container","fluid","Grid","container","Column","mobile","tablet","computer","Image","src","Logo","height","centered","Header","as","textAlign","Subheader","Form","size","onSubmit","e","email","password","preventDefault","a","resp","json","console","log","ok","setItem","Date","getTime","uid","Swal","fire","msg","Input","onChange","label","placeholder","required","validations","Label","className","onClick","history","push","Button","positive","active","disabled","loading","primary","Navbar","clear","AboutUs","text","HomeScreen","Link","to","PrivateScreen","authenticated","Component","component","rest","PublicScreen","RegisterScreen","rName","rEmail","rPassword1","rPassword2","formRegisterValues","handleRegisterInputChange","AppRouter","exact","path","checking","rootReducer","combineReducers","action","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ChallengeApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5df88e3e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/img_login_candidate.32abf99a.png\";","import { useState } from \"react\";\r\n\r\nexport const useForm = (initialState = {})=>{\r\n    const [values,setValues] = useState(initialState);\r\n\r\n    const reset = ()=>{\r\n        setValues(initialState);\r\n    }\r\n\r\n    const handleInputChange = ({target})=>{\r\n        setValues({\r\n            ...values,\r\n            [target.name]:target.value\r\n        });\r\n    }\r\n\r\n    return [values,handleInputChange,reset];\r\n}","const baseUrl = process.env.REACT_APP_API_URL;\r\nconst test = 'https://mern-calendar-ezequiel.herokuapp.com/api';\r\n\r\nconst fetchQuery = (endpoint,data,method = 'GET')=>{\r\n    const url = `${test}/${endpoint}`;\r\n    if(method === 'GET'){\r\n        return fetch(url);\r\n    }else{\r\n        return fetch(url,{\r\n            method:method,\r\n            headers:{\r\n                'Content-type':'application/json'\r\n            },\r\n            body:JSON.stringify(data)\r\n        })\r\n    }\r\n}\r\n\r\nconst fetchQueryWithToken = (endpoint,data,method='GET')=>{\r\n    const url = `${test}/${endpoint}`;\r\n    const token = localStorage.getItem('token') || '';\r\n    //console.log(token);\r\n    if(method === 'GET'){\r\n        return fetch(url,{\r\n            method:method,\r\n            headers:{\r\n                'x-token':token\r\n            }\r\n        })\r\n    }else{\r\n        return fetch(url,{\r\n            method:method,\r\n            headers:{\r\n                'x-token':token,\r\n                'Content-type':'application/json'\r\n            },\r\n            body:JSON.stringify(data)\r\n        });\r\n    }\r\n}\r\nexport{\r\n    fetchQuery,\r\n    fetchQueryWithToken\r\n}","export const types= {\r\n    authCheckingFinish:'[auth] Finish checking login state',\r\n    authLogin:'[auth] Login',\r\n    authLogout:'[auth] Logout'\r\n}","import Swal from 'sweetalert2';\r\nimport { fetchQuery,fetchQueryWithToken } from '../helpers/fetch';\r\nimport { types } from '../types/types';\r\n\r\nexport const startLogin = (email,password)=>{\r\n    return async(dispatch)=>{\r\n        const resp  = await fetchQuery('auth',{email,password},'POST');\r\n        const body  = await resp.json();\r\n        console.log('DATEEEEEEEEEEEEEEEEEEEEEEEEEE')\r\n        console.log(JSON.stringify(body));\r\n        if(body.ok){\r\n            localStorage.setItem('token',body.token);\r\n            localStorage.setItem('token-init-date',new Date().getTime());\r\n            dispatch(authLogin({\r\n                uid:body.uid,\r\n                name:body.name\r\n            }))\r\n        }else{\r\n            Swal.fire('Error',body.msg,'error');\r\n        }\r\n    }\r\n}\r\n//We need check with ONE action if we have in local store, token and check y that is valid.\r\nexport const startChecking=()=>{\r\n    return async(dispatch)=>{\r\n        //This method will check with the token (localStore) if is valid\r\n        const resp =  await fetchQueryWithToken('auth/renew',{},'GET');\r\n        const body =  await resp.json();\r\n        \r\n        if(body.ok){\r\n            localStorage.setItem('token',body.token);\r\n            localStorage.setItem('token-init-date',new Date().getTime());\r\n            dispatch(authLogin({\r\n                uid:body.uid,\r\n                name:body.name\r\n            }))\r\n        }else{\r\n            dispatch(checkingFinish());\r\n        }\r\n    }\r\n}\r\n\r\nexport const startRegister=(email, password,name)=>{\r\n    return async (dispatch)=>{\r\n        const resp = await fetchQuery('auth/new',{email,password,name},'POST');\r\n        const body = await resp.json();\r\n        if(body.ok){\r\n            localStorage.setItem('token',body.token);\r\n            localStorage.setItem('token-init-date',new Date().getTime());\r\n            dispatch(authLogin({\r\n                uid:body.uid,\r\n                name:body.name\r\n            }))\r\n        }else{\r\n            Swal.fire('Error',body.msg,'error');\r\n        }\r\n    }\r\n}\r\nconst authLogin = (user)=>({\r\n    type:types.authLogin,\r\n    payload:user\r\n});\r\n\r\nconst checkingFinish = ()=>({type:types.authCheckingFinish})\r\n\r\n///\r\nexport const startLogout = ()=>{\r\n    return (dispatch)=>{\r\n        localStorage.clear();\r\n        dispatch(logout());\r\n    }\r\n}\r\n\r\nconst logout = ()=>({\r\n    type:types.authLogout\r\n})","import React, { useEffect, useRef, useState } from 'react';\r\nimport './login.css';\r\nimport Logo from'../../assets/img_login_candidate.png';\r\nimport {\r\n  Image,\r\n  Header,\r\n  Container,\r\n  Button,\r\n  Divider,\r\n  Checkbox,\r\n  Grid,\r\n  Label\r\n} from 'semantic-ui-react'\r\nimport { Form } from 'semantic-ui-react'\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startLogin } from '../../actions/auth';\r\nimport Swal from 'sweetalert2';\r\n\r\n\r\n\r\n\r\nexport const LoginScreen = (props)=>{\r\n\r\n    const dispatch = useDispatch();\r\n    const {button} = useSelector(state => state.auth)\r\n    const [stateButton,setStateButton] =  useState(true);\r\n    const [formLoginValues,handleLoginInputChange,reset] = useForm({\r\n        lEmail:'',\r\n        lPassword:''\r\n    });\r\n    \r\n\r\n    const {lEmail,lPassword} = formLoginValues;\r\n    \r\n    const handleLogin=(e)=>{\r\n        e.preventDefault();\r\n        //console.log(lEmail,lPassword);\r\n        //console.log(process.env.REACT_APP_API_URL)\r\n        dispatch(startLogin(lEmail,lPassword));\r\n        setStateButton(false)\r\n        //Dispatch Login\r\n         //Activamos el boton si esta authenticado o no con el Reducer\r\n        reset();\r\n    }\r\n   \r\n    useEffect(()=>{\r\n        setStateButton(true)\r\n    },[button]);\r\n\r\n\r\n    const handlePassword = ()=>{\r\n        Swal.fire('Information','Try again in a  few minutes','info')\r\n    }\r\n\r\n    const handleRegister = ()=>{\r\n        props.history.push('/register')\r\n    }\r\n\r\n    return (\r\n        <div style={{marginTop:'30vh'}}>\r\n        <Container fluid  >\r\n          \r\n            <Grid container  >\r\n                <Grid.Column  mobile={16} tablet={16} computer={8}>\r\n                \r\n                    <Image src={Logo} style={{height: '210px'}} centered />\r\n                \r\n                    </Grid.Column>\r\n                <Grid.Column  mobile={16} tablet={16} computer={8}>\r\n                \r\n                        <Header as='h1' textAlign='center'>\r\n                        Candidate Login.\r\n                        <Header.Subheader>\r\n                        Please login here to access your <strong>account</strong>.\r\n                        </Header.Subheader>\r\n                        </Header>\r\n                        <Form \r\n                        name='form'\r\n                        size='large'\r\n                        onSubmit={handleLogin}\r\n                        >\r\n                    \r\n                        <Form.Input\r\n                            type='email'\r\n                            name='lEmail'\r\n                            value={lEmail}\r\n                            onChange={handleLoginInputChange}\r\n                            label='Email'\r\n                            placeholder='inbox@mail.com'\r\n                            size='large'\r\n                            required\r\n                            validations='isEmail'\r\n                            \r\n                        \r\n                        />\r\n                        <Form.Input\r\n                            type='password'\r\n                            name='lPassword'\r\n                            value={lPassword}\r\n                            onChange={handleLoginInputChange}\r\n                            label='Password'\r\n                            placeholder='•••••••'\r\n                            size='large'\r\n                            required\r\n                        \r\n                        />\r\n                        <Label className=\"labelCustom\" >\r\n                           \r\n                        </Label>\r\n                        <div className=\"form-group\" onClick={handlePassword}>\r\n                            <input \r\n                                type=\"submit\" \r\n                                className=\"labelCustom\" \r\n                                value=\"Forgot your password?\" />\r\n                        </div>\r\n                        <div className=\"form-group\" onClick={handleRegister}>\r\n                            <input \r\n                                type=\"submit\" \r\n                                className=\"labelCustom\" \r\n                                value=\"Create an account\" />\r\n                        </div>\r\n                        {\r\n                            (stateButton) \r\n                            ? (<Button positive fluid active size='large'> Login</Button>)\r\n                            : (<Button positive fluid disabled  loading primary size='large'> Login</Button>)\r\n                        }\r\n                       \r\n                        </Form>\r\n                \r\n                    </Grid.Column>\r\n            </Grid>\r\n          \r\n        </Container>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startLogout } from '../../actions/auth';\r\n\r\n\r\nexport const Navbar = () => {\r\n    const {name} = useSelector(state => state.auth)\r\n    const dispatch = useDispatch();\r\n    const handleLogout = ()=>{\r\n        dispatch(startLogout());\r\n    }\r\n    return (\r\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\r\n            <span   className=\"navbar-brand\">{name}</span>\r\n            <button className=\"btn btn-outline-danger\" onClick={handleLogout}>\r\n                <i className=\"fas fa-sign-out-alt\"></i>\r\n                <span> Salir</span>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport {\r\n    Container\r\n  } from 'semantic-ui-react'\r\nimport { Navbar } from './Navbar';\r\n\r\nexport const AboutUs = ()=>{\r\n    return(\r\n      <div>\r\n        <Navbar/>\r\n          <Container text>\r\n            This is about us\r\n        </Container>\r\n      </div>\r\n       \r\n    )\r\n}","import React, { Component } from 'react'\r\nimport {\r\n  Link\r\n} from 'react-router-dom'\r\nimport {\r\n  Container,\r\n  Button\r\n} from 'semantic-ui-react'\r\nimport {Navbar} from './Navbar';\r\n\r\n\r\nexport const HomeScreen =()=>{\r\n    return (\r\n      <div>\r\n        <Navbar />\r\n        <Container text>\r\n          This is home...\r\n          <br />\r\n          <br />\r\n          <Button as={Link} to='/about-us'>ABOUT US</Button>\r\n        </Container>\r\n      </div>\r\n     \r\n    )    \r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {Route, Redirect} from 'react-router-dom';\r\nexport const PrivateScreen = ({authenticated,component:Component, ...rest})=>{\r\n    \r\n    return (\r\n        <Route  \r\n            {...rest}\r\n            component = { (props)=>\r\n                (\r\n                    (authenticated)\r\n                    ? (<Component {...props} />)\r\n                    : (<Redirect to ='/login'/>)\r\n                )\r\n            }\r\n        />\r\n    );\r\n}","import React from 'react';\r\nimport PropTypes  from 'prop-types';\r\nimport {Route, Redirect} from 'react-router-dom';\r\n\r\nexport const PublicScreen = ({authenticated,component:Component, ...rest})=>{\r\n    //Rest => All propertys on the params\r\n    return(\r\n        <Route \r\n            {...rest}\r\n            component= {\r\n                (props)=>(\r\n                    (authenticated === false)\r\n                    ? (<Component {...props} />) //We will send all propertys inside the Component= (*Name Component)\r\n                    : (<Redirect to=\"/\"/>)\r\n                )\r\n            }\r\n        />\r\n    )\r\n}","import React from 'react';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport {\r\n    Image\r\n} from 'semantic-ui-react'\r\nimport Logo from'../../assets/img_login_candidate.png';\r\nimport Swal from 'sweetalert2';\r\nimport { useDispatch } from 'react-redux';\r\nimport { startRegister } from '../../actions/auth';\r\n\r\nexport const RegisterScreen = (props)=>{\r\n    const dispatch = useDispatch();\r\n    const [formRegisterValues, handleRegisterInputChange] = useForm({\r\n        rName:'Your Name',\r\n        rEmail:'email@gmail.com',\r\n        rPassword1:'******',\r\n        rPassword2:'******'\r\n    })\r\n\r\n    const {rName, rEmail,rPassword1, rPassword2} =formRegisterValues;\r\n\r\n    const handleLogin = (e)=>{\r\n        e.preventDefault();\r\n        console.log(formRegisterValues);\r\n        if(rEmail === ''){\r\n            return Swal.fire('Error','Email is required','error');\r\n        }\r\n        if(rName === ''){\r\n            return Swal.fire('Error','Name is required','error');\r\n        }\r\n        if(rPassword1 !== rPassword2){\r\n            return Swal.fire('Error','Las contraseñas deben de ser iguales','error');\r\n        }\r\n        dispatch(startRegister(rEmail,rPassword1,rName));\r\n    }\r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                   <Image src={Logo} style={{height: '210px'}} centered />\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Register</h3>\r\n                    <form onSubmit={handleLogin} >\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nombre\"\r\n                                name=\"rName\"\r\n                                value={rName}\r\n                                onChange= {handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"rEmail\"\r\n                                value={rEmail}\r\n                                onChange= {handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\" \r\n                                name=\"rPassword1\"\r\n                                value={rPassword1}\r\n                                onChange= {handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Repita la contraseña\" \r\n                                name=\"rPassword2\"\r\n                                value={rPassword2}\r\n                                onChange= {handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\" style={{ textAlign:'center'}}>\r\n                            <input \r\n                                type=\"submit\" \r\n                                className=\"btnSubmit\" \r\n                                value=\"Create your account\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useEffect } from 'react'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link,\r\n    Redirect\r\n  } from \"react-router-dom\";\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { AboutUs } from '../components/home/AboutUs';\r\nimport { HomeScreen } from '../components/home/HomeScreen';\r\nimport { PrivateScreen } from './PrivateScreen';\r\nimport { PublicScreen } from './PublicScreen';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startChecking } from '../actions/auth';\r\nimport { RegisterScreen } from '../components/auth/RegisterScreen';\r\n\r\nexport const AppRouter = ()=>{\r\n    const dispatch = useDispatch();\r\n    const {uid} = useSelector(state=>state.auth);\r\n\r\n    //We need check with ONE action if we have in local store, token and check y that is valid.\r\n    useEffect(()=>{\r\n        dispatch(startChecking());\r\n    },[dispatch]);\r\n    return(\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <PublicScreen  exact path=\"/login\" component={LoginScreen} authenticated={!!uid} />\r\n                    <PublicScreen  exact path=\"/register\" component={RegisterScreen} authenticated={!!uid} />\r\n                    <PrivateScreen exact path=\"/\" component={HomeScreen} authenticated={!!uid}/>\r\n                    <PrivateScreen exact path=\"/about-us\" component={AboutUs} authenticated={!!uid}/>\r\n                    <Redirect to=\"/\"/>\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}","import React from 'react';\r\nimport { types } from '../types/types';\r\n\r\nconst initialState  = {\r\n    checking : true,\r\n    button:true\r\n}\r\nexport const authReducer = (state =  initialState ,action)=>{\r\n\r\n\r\n    switch (action.type) {\r\n        case types.authLogin:\r\n            return {\r\n                ...state,\r\n                checking:false,\r\n                button:true,\r\n                ...action.payload\r\n            }\r\n        case types.authCheckingFinish:\r\n            return{\r\n                ...state,\r\n                checking:false\r\n            }\r\n\r\n        case types.authLogout:\r\n            return{\r\n                checking:false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers} from 'redux';\r\nimport { authReducer } from './authReducer';\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n    auth:authReducer\r\n})\r\n","import { applyMiddleware, compose, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { rootReducer } from \"../reducers/rootReducer\";\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n);","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport { AppRouter } from '../routers/AppRouter';\r\nimport { store } from '../store/store';\r\nexport const ChallengeApp = ()=>{\r\n    return (\r\n        <Provider store={store}>\r\n           <AppRouter/>\r\n        </Provider>\r\n    )\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { ChallengeApp } from './components/ChallengeApp';\r\nimport 'semantic-ui-css/semantic.min.css'\r\n\r\nReactDOM.render(\r\n    <ChallengeApp/>,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}